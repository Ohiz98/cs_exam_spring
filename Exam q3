3)  Consider the code for the Link, Stack and Queue classes.  Note Stack and Queue are not complete.

---------------------------------------------------------------
public class Link{
  Object thing;
  Link next;
}
---------------------------------------------------------------


----------------------------------------------------------------
public class Stack{
  Link head;
  int length=0;
  
  public Stack(Link first){
    head=first;
    length=1;}
  
  public void push(Link newlink){
    newlink.next=head;
    head=newlink;
    length=length+1;}
    
   public Link peek(Link newlink){
    return head;}
    
  .......
  
--------------------------------------------------------------
  
----------------------------------------------------------------
public class Queue{
  Link head;
  int length=0;
 
  public Queue(Link first){
    head=first;
    length=1;} 
    
  public void add(Link newlink){
    newlink.next=head;
    head=newlink;
    length=length+1;}
    
  .......
  
--------------------------------------------------------------

a)  Explain what a Stack is.  Specify if it is LIFO or FIFO.

A stack is a vertical arrangement of links topping each other. It is Last In First Out (LIFO). 
In a stack we can pop out the top link or we can peek on the top object or we can push in a new head at the top. 
An example of a stack would be three white board cleaners stacked on each other (Your example). 
The topmost link on the stack is the head and it is the last one to go in but the first one to go out because the link on top is popped.

b)  Complete the Stack class by writing the "pop" method.

  public void pop(){
    Link temp=head;
    this.head=this.head.next;
    length=length-1;
    return temp;}

c)  Explain what a Queue is.  Specify if it is LIFO or FIFO.

A queue is a horizontal arrangement of links which connect to each other in a certain order. 
It is First In First Out(FIFO). In a queue the link that is the head goes in first and is the first one that is taken out. 
An example would be the queue at during lunch, where the first person to get on the line is the first person to get their food.

d)  Complete the Queue class by writing the "peek" and "remove" methods.

public Link peek(){
    Link temp = head;
    for(int i=1; i<length; i++){
      temp = temp.next;}
    return temp;}
    
    
  
  public Link remove(){
    Link temp = this.peek();
    length = length-1;
    return temp;}
